"use strict";if(!angular){var version="1.3.15";throw console.error("farmbuild requires angular JS "+version+", please include e.g. https://ajax.googleapis.com/ajax/libs/angularjs/"+version+"/angular.min.js "),new Error("FarmBuild requires angular "+version+", please load it before the farmbuild.core module.")}angular.module("farmbuild.core",[]),window.farmbuild={},angular.injector(["ng","farmbuild.core"]),angular.module("farmbuild.core").factory("collections",function(validations,$log){function _byProperty(collection,property,value){if(!_isArray(collection))return void 0;if(!_isDefined(property))return void 0;if(!_isDefined(value))return void 0;var i=0;for(i;i<collection.length;i++){var item=collection[i];if(item.hasOwnProperty(property)&&_equals(item[property],value))return item}return void 0}function _add(collection,item,index){return _isDefined(index)?collection.splice(index,0,item):collection.push(item),collection}function _isEmpty(collections){return 0===collections.length}function _count(collection){return angular.isArray(collection)?collection.length:-1}function _at(collection,index){return collection[index]}function _removeAt(collection,index){return angular.isArray(collection)?!_isDefined(index)||0>index||index>collection.length-1?($log.warn("index is out of range for the array, index: %s, collection.length: %s",index,collection.length),collection):(collection.splice(index,1),collection):($log.warn("collection is not an array, returning as it is: %j",collection),collection)}function _remove(collections,item){return $log.info("removing item %s ",item),_isDefined(item)?(angular.forEach(collections,function(i,index){angular.equals(i,item)&&_removeAt(collections,index)}),collections):void 0}function _first(collection){return collection[0]}function _last(collection){var length=_count(collection);return collection[length-1]}var collections={},_isDefined=validations.isDefined,_isArray=validations.isArray,_equals=validations.equals;return collections={add:_add,at:_at,size:_count,byProperty:_byProperty,removeAt:_removeAt,remove:_remove,first:_first,last:_last,isEmpty:_isEmpty}}),angular.module("farmbuild.core").factory("googleAnalytics",function($log,validations){function sendPageView(values){ga(trackerName+".send","pageview",values)}var googleAnalytics={},_isDefined=validations.isDefined,trackerName="farmbuildTracker",trackingCode="UA-62295166-1",src=("https:"==document.location.protocol?"https://":"http://")+"www.google-analytics.com/analytics.js";return function(i,s,o,g,r,a,m){i.GoogleAnalyticsObject=r,i[r]=i[r]||function(){(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date,a=s.createElement(o),m=s.getElementsByTagName(o)[0],a.async=1,a.src=g,m.parentNode.insertBefore(a,m)}(window,document,"script",src,"ga"),ga("create",trackingCode,"auto",{name:trackerName}),googleAnalytics.track=function(apiName,clientName){return _isDefined(apiName)?_isDefined(clientName)?($log.info("googleAnalytics.track apiName: %s, clientName: %s",apiName,clientName),void sendPageView({page:apiName,title:apiName,dimension4:apiName,dimension5:clientName})):void $log.error("googleAnalytics.track clientName must be provided. Please specify the registered client name."):void $log.error("googleAnalytics.track apiName must be provided. Please specify you API name.")},googleAnalytics}),angular.module("farmbuild.core").factory("validations",function($log){var validations={};validations.isPositiveNumberOrZero=function(value){return"string"!=typeof value&&!isNaN(parseFloat(value))&&isFinite(value)&&parseFloat(value)>=0},validations.isPositiveNumber=function(value){return validations.isPositiveNumberOrZero(value)&&parseFloat(value)>0},validations.isAlphabet=function(value){var regex=/^[A-Za-z]+$/gi;return regex.test(value)},validations.isAlphanumeric=function(value){var regex=/^[a-zA-Z0-9]*[a-zA-Z]+[a-zA-Z0-9 _]*$/gi;return regex.test(value)};var isEmpty=function(data){return"number"==typeof data||"boolean"==typeof data?!1:"undefined"==typeof data||null===data?!0:"undefined"!=typeof data.length?0==data.length:!1};return validations.isEmpty=isEmpty,validations.isDefined=angular.isDefined,validations.isArray=angular.isArray,validations.isObject=angular.isObject,validations.isString=angular.isString,validations.equals=angular.equals,validations});